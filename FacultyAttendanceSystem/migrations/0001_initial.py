# Generated by Django 5.0.4 on 2024-07-01 17:50

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ActiveSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_no', models.CharField(max_length=20)),
                ('ip_address', models.GenericIPAddressField()),
                ('last_logout', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ClassDuration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration', models.CharField(max_length=20)),
                ('duration_short_name', models.CharField(max_length=20)),
                ('hours', models.IntegerField(null=True)),
                ('minute', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('short_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='HolidayScheduler',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Holiday event')),
                ('Title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_name', models.CharField(max_length=200, verbose_name='Room name')),
            ],
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term_date', models.CharField(max_length=100, null=True, verbose_name='Term Date')),
                ('name', models.CharField(max_length=120)),
                ('start_date', models.DateField(verbose_name='start term date')),
                ('end_date', models.DateField(verbose_name='end term date')),
            ],
        ),
        migrations.CreateModel(
            name='EventScheduler',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Event Date')),
                ('start_time', models.TimeField(verbose_name='start event')),
                ('end_time', models.TimeField(verbose_name='end event')),
                ('Title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Event Title')),
                ('Description', models.CharField(blank=True, max_length=400, null=True, verbose_name='Event Description')),
                ('faculty', models.ManyToManyField(blank=True, to='FacultyAttendanceSystem.faculty', verbose_name='Faculty')),
            ],
        ),
        migrations.CreateModel(
            name='AdminCredentials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50)),
                ('password', models.CharField(max_length=50)),
                ('faculty', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='FacultyAttendanceSystem.faculty')),
            ],
        ),
        migrations.CreateModel(
            name='StudentClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Students_class_name', models.CharField(max_length=200, null=True, verbose_name='Class Name')),
                ('semester', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='related_classes', to='FacultyAttendanceSystem.semester')),
            ],
        ),
        migrations.CreateModel(
            name='Students',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_no', models.CharField(max_length=20, unique=True, verbose_name='Enrollment Number')),
                ('student_name', models.CharField(max_length=100, verbose_name='Student Name')),
                ('Student_password', models.CharField(blank=True, max_length=50, null=True, verbose_name='Student Password')),
                ('Student_Class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='FacultyAttendanceSystem.studentclass', verbose_name='Student Class')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('short_name', models.CharField(max_length=200)),
                ('semester', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subjects', to='FacultyAttendanceSystem.semester')),
            ],
        ),
        migrations.CreateModel(
            name='Timetable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_type', models.CharField(blank=True, choices=[('lecture', 'lecture'), ('lab', 'lab'), ('lab-A1', 'lab-A1'), ('lab-A2', 'lab-A2'), ('lab-A3', 'lab-A3'), ('lab-A4', 'lab-A4'), ('lab-B1', 'lab-B1'), ('lab-B2', 'lab-B2'), ('lab-B3', 'lab-B3'), ('lab-B4', 'lab-B4'), ('lab-C1', 'lab-C1'), ('lab-C2', 'lab-C2'), ('lab-C3', 'lab-C3'), ('lab-C4', 'lab-C4')], default='scheduled', max_length=200, null=True, verbose_name='Class Type')),
                ('first_class_date', models.DateField(verbose_name='First Class of the semester')),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Class definition create date')),
                ('modified_date', models.DateTimeField(auto_now=True, null=True, verbose_name='Class definition modified date')),
                ('start_time', models.TimeField(blank=True, null=True, verbose_name='Class Start Time')),
                ('end_time', models.TimeField(blank=True, null=True, verbose_name='Class End Time')),
                ('Student_Class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='FacultyAttendanceSystem.studentclass')),
                ('created_by_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='class_definition_creator', to=settings.AUTH_USER_MODEL)),
                ('duration', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='class_definition_duration', to='FacultyAttendanceSystem.classduration')),
                ('faculty', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='FacultyAttendanceSystem.faculty', verbose_name='faculty_id')),
                ('modified_by_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='class_definition_modifier', to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='room', to='FacultyAttendanceSystem.room', verbose_name='Room')),
                ('semester', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='FacultyAttendanceSystem.semester')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subject', to='FacultyAttendanceSystem.subject', verbose_name='subject')),
            ],
        ),
        migrations.CreateModel(
            name='StudentsRollouts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_status', models.CharField(blank=True, choices=[('scheduled', 'scheduled'), ('cancelled', 'cancelled'), ('break', 'break'), ('discontinued', 'discontinued')], default='scheduled', max_length=200, null=True, verbose_name='Class status')),
                ('student_attendance', models.BooleanField(default=False, verbose_name='Student Attendance')),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_date', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('start_time', models.TimeField(blank=True, null=True, verbose_name='Start time')),
                ('end_time', models.TimeField(blank=True, null=True, verbose_name='End time')),
                ('class_date', models.DateField(blank=True, null=True, verbose_name='Class date')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='student_class_created_by', to=settings.AUTH_USER_MODEL)),
                ('duration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='student_class_rollout', to='FacultyAttendanceSystem.classduration')),
                ('faculty', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='student_class_faculty', to='FacultyAttendanceSystem.faculty')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='student_class_modified_by', to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='FacultyAttendanceSystem.room')),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='FacultyAttendanceSystem.students', verbose_name='Student')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='FacultyAttendanceSystem.subject', verbose_name='Subject')),
                ('class_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='student_class_rollout', to='FacultyAttendanceSystem.timetable', verbose_name='Class definition')),
            ],
        ),
        migrations.CreateModel(
            name='TimeTableRollouts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_status', models.CharField(blank=True, choices=[('scheduled', 'scheduled'), ('cancelled', 'cancelled'), ('break', 'break'), ('discontinued', 'discontinued')], default='scheduled', max_length=200, null=True, verbose_name='Class status')),
                ('class_attedance', models.BooleanField(default=False, verbose_name='Faculty Attedance')),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_date', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('start_time', models.TimeField(blank=True, null=True, verbose_name='Start time')),
                ('end_time', models.TimeField(blank=True, null=True, verbose_name='End time')),
                ('class_date', models.DateField(blank=True, null=True, verbose_name='Class date')),
                ('class_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='class_rollout', to='FacultyAttendanceSystem.timetable', verbose_name='Class definition')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='class_created_by', to=settings.AUTH_USER_MODEL)),
                ('duration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='class_rollout', to='FacultyAttendanceSystem.classduration')),
                ('faculty', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='FacultyAttendanceSystem.faculty', verbose_name='faculty_id')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='class_modified_by', to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='FacultyAttendanceSystem.room')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='FacultyAttendanceSystem.subject', verbose_name='Subject')),
            ],
        ),
        migrations.CreateModel(
            name='WorkShift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Class Start Time')),
                ('punch_in', models.TimeField(blank=True, null=True, verbose_name='punch in')),
                ('punch_out', models.TimeField(blank=True, null=True, verbose_name='punch out')),
                ('faculty', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='FacultyAttendanceSystem.faculty', verbose_name='faculty_id')),
            ],
        ),
    ]
